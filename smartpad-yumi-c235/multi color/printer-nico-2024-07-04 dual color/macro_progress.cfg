[gcode_macro CUT_FILAMENT]
description: Move to the cutting position and cut the filament
gcode:
    {% set approach_position = 6|float %}
    {% set approach_speed = 20000|int %}
    {% set cut_speed = 500|int %}
    {% set cut_position = -9|float %}
    HOMING_XY #check if homing  is done or not for prevent klipper error
    G90  # Switch to absolute positioning mode
    RESPOND MSG="Approaching the cutting position at speed {approach_speed} mm/min"
    G1 X{approach_position} F{approach_speed}  # Move to the approach position at fast speed
    #M400  # Wait for the movement to complete
    RESPOND MSG="Cutting the filament at speed {cut_speed} mm/min"
    G1 X{cut_position} F{cut_speed}  # Move to the cutting position at slow speed
    #M400  # Wait for the movement to complete
    POP_TOOL_POSITION
    G1 E-40 F800 #retract filament for prevent other loading filament
    RESPOND MSG="Filament cut completed"

[gcode_macro LOAD_YMS]
description: Load filament into the YMS box with a specified length and speed
gcode:
    {% set insert_length = 400|int %}
    {% set speed = 1000|int %}
    G92 E0  # Reset the extruder position
    G1 E{insert_length} F{speed}  # Insert the filament with the specified length and speed
    T0  # Select tool 0
    M84 E0  # Disable the motor for the first extruder (E0)
    M104 S0  # Turn off the hotend
    RESPOND MSG="Filament loaded with length {insert_length} mm at speed {speed} mm/min"
    
[gcode_macro POP_TOOL_POSITION]
description: Move to the pop tool position 
gcode:
    HOMING_XY #check if homing  is done or not for prevent klipper error
    G90  # Switch to absolute positioning mode
    G1 X257 F20000  

[gcode_macro POP_TOOL_CLEANING]
description: 
gcode:
    {% set iterations = 3|int %}
    {% set speed = 20000|int %}
    {% set fan_speed = 255|int %}  # 255 corresponds to 100% fan speed
    {% set delay = 7000|int %}  # Delay in milliseconds
    {% set distance = 15|int %}  # Distance to move on the X-axis
    
    HOMING_XY #check if homing  is done or not for prevent klipper error
    POP_TOOL_POSITION
    M106 S{fan_speed} # Turn on the filament cooling fan at the specified speed
    RESPOND MSG="Filament cooling fan turned on at speed {fan_speed} (100%)"

    # Wait for the specified delay time
    G4 P{delay}
    #G4 P5000
    RESPOND MSG="Waiting for {delay} seconds before starting the movement"

    G91  # Switch to relative positioning mode
    RESPOND MSG="Starting back and forth movement on the X-axis for {iterations} times at speed {speed} mm/min and distance {distance} mm"

    {% for i in range(iterations) %}
        G1 X-{distance} F{speed}  # Move -{distance} mm on the X-axis
        #M400  # Wait for the movement to complete
        G1 X{distance} F{speed}  # Move {distance} mm on the X-axis back to the initial position
        #M400  # Wait for the movement to complete
    {% endfor %}

    G90  # Switch back to absolute positioning mode
    RESPOND MSG="Back and forth movement on the X-axis completed"
    
    # Optionally, you can turn off the fan after the movement
    #M107

#[gcode_macro M84]
#rename_existing:M84.1
#gcode:
#      SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
#      SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
#      SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
#      SET_STEPPER_ENABLE STEPPER=extruder  enable=0
#      SET_KINEMATIC_POSITION
      
[gcode_macro SMART_LOAD_FILAMENT]
description: Start filament loading process
gcode:
     {% set delay_time = 1000 %}  # Delay time in milliseconds
     {% set fan_speed = 255|int %}  # 255 corresponds to 100% fan speed

    {% if printer['filament_switch_sensor filament_sensor'].filament_detected %}
        # If the switch is triggered, stop extrusion
        RESPOND MSG="Filament sensor triggered, stopping extrusion."
        #G90  # Switch back to absolute coordinates
        #M82  # witch back to absolute mode
        {% for i in range(1) %}
            CHECK_UNLOAD_FILAMENT
           # G4 P{delay_time}  # Delay
        {% endfor %}
    {% else %} 
        RESPOND MSG="Filament extrusion..."
        #M83 # Switch to relative mode for Extruder
        G90  # Switch to absolute coordinates
        POP_TOOL_POSITION # pop tool position 
        {% for i in range(10) %} # Loop to check switch status and feed filament
            MY_LOAD_FILAMENT
            G4 P{delay_time}  # Delay
        {% endfor %}
    M106 S{fan_speed} # Turn on the filament cooling fan at the specified speed 
       
       # G90  # Switch to absolute coordinates
       # M82  # Switch to absolute mode
        
    {% endif %}

[gcode_macro MY_LOAD_FILAMENT]
description: Load filament until switch is triggered

gcode:
    {% set extrude_speed = 300 %}  # mm/s, 根据需要调整速度
    {% set extrude_length = 150 %}  # mm, 每次挤出长度

    # 检查开关状态
    {% if printer['filament_switch_sensor filament_sensor'].filament_detected %}
        # 如果检测到开关触发，停止进丝
        #RESPOND MSG="Filament sensor triggered, stopping extrusion."
        #G1 E-{extrude_length} F{extrude_speed}
    {% else %}
        M400
        G1 E{extrude_length} F{extrude_speed}
        RESPOND MSG="Extrusion in progress"
    {% endif %}
    

[gcode_macro CHECK_UNLOAD_FILAMENT]
description: Unload filament until switch is not triggered

gcode:
    {% set retract_speed = 800 %}  # mm/min, adjust speed as needed
    {% set retract_length = 120.0 %}  # mm, retraction length for each attempt
    {% set extrude_length = 50.0 %}  # mm, extrusion length to attempt filament removal if needed
    {% set max_attempts = 2 %}  # maximum number of retraction attempts

    # Check the filament sensor state
    {% if printer['filament_switch_sensor filament_sensor'].filament_detected %}
        RESPOND MSG="Filament detected, attempting to retract..."
        {% set filament_retracted = False %}
        {% for attempt in range(max_attempts) %}
            CUT_FILAMENT
            POP_TOOL_POSITION
            G1 E-{retract_length} F{retract_speed}
            M400  # Wait for the movement to complete
            QUERY_FILAMENT_SENSOR SENSOR=filament_sensor
            {% if not printer['filament_switch_sensor filament_sensor'].filament_detected %}
                RESPOND MSG="Filament successfully retracted."
                {% set filament_retracted = True %}
                break
            {% else %}
                RESPOND MSG="Retraction attempt { attempt + 1 } failed, trying again..."
            {% endif %}
        {% endfor %}
        {% if not filament_retracted %}
            RESPOND MSG="Filament still detected after { max_attempts } attempts. Stopping."
            M84  # Disable motors
        {% else %}
            RESPOND MSG="Attempting to insert filament after successful retraction."
            G1 E{extrude_length} F{retract_speed}
            G1 E-6 F20000 #retract after loading to remove pressure
            M400 # Wait for the movement to complete
        {% endif %}
    {% else %}
        RESPOND MSG="No filament detected, inserting filament..."
        #G1 E{extrude_length} F{retract_speed}
    {% endif %}

[gcode_macro CHECK_LOAD_FILAMENT]
description: Load filament until switch is triggered

gcode:
    {% set extrude_speed = 800 %}  # mm/min, adjust speed as needed
    {% set extrude_length = 10.0 %}  # mm, extrusion length for each attempt
    {% set retract_length = 50.0 %}  # mm, retraction length to attempt filament removal
    {% set max_attempts = 2 %}  # maximum number of retraction attempts

    # Check the filament sensor state
    {% if printer['filament_switch_sensor filament_sensor'].filament_detected %}
        RESPOND MSG="Filament detected, attempting to retract..."
        {% set filament_retracted = False %}
        {% for attempt in range(max_attempts) %}
            G1 E-{retract_length} F{extrude_speed}
            M400  # Wait for the movement to complete
            QUERY_FILAMENT_SENSOR SENSOR=filament_sensor
            {% if not printer['filament_switch_sensor filament_sensor'].filament_detected %}
                RESPOND MSG="Filament successfully retracted."
                {% set filament_retracted = True %}
                break
            {% else %}
                RESPOND MSG="Retraction attempt { attempt + 1 } failed, trying again..."
            {% endif %}
        {% endfor %}
        {% if not filament_retracted %}
            RESPOND MSG="Filament still detected after { max_attempts } attempts. Stopping."
            #M84  # Disable motors
        {% else %}
            RESPOND MSG="Inserting filament after successful retraction."
            G1 E{extrude_length} F{extrude_speed}
        {% endif %}
    {% else %}
        RESPOND MSG="No filament detected, inserting filament..."
        G1 E{extrude_length} F{extrude_speed}
    {% endif %}
    


