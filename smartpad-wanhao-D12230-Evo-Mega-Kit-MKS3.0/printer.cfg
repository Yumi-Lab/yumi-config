######### NOT REMOVE START ##################################
[include plr.cfg]
[include mainsail.cfg]
[include timelapse.cfg]
[include smartpad-adxl345.cfg]
[include smartpad-cpu-temp.cfg]
[include moonraker_obico_macros.cfg]
[exclude_object]
[save_variables]
filename: ~/printer_data/config/variables.cfg
[gcode_arcs]
resolution: 0.1

[respond]
default_type: echo
default_prefix: echo:
[display_status]
[pause_resume]

######### NOT REMOVE END ##################################
#YUMI SMART PAD use OPEN SOURCE CODE 
#all documentation about klipper is available here : https://www.klipper3d.org/
#all documentation about Moonraker is available here : https://moonraker.readthedocs.io/
#all documentation about KlipperScreen is avaialble here : https://klipperscreen.readthedocs.io/
#all documentation about Mainsail is available here : https://docs.mainsail.xyz/
#all documentation about Crowsnest is available here : https://crowsnest.mainsail.xyz/
#all documentation about YUMI-LAB is available here : https://wiki.yumi-lab.com/

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command


[virtual_sdcard]
path: ~/printer_data/gcodes
#on_error_gcode: CANCEL_PRINT

###################################


[stepper_x]
step_pin: PB12
dir_pin: !PB10
enable_pin: !PB1
microsteps: 32
rotation_distance: 80
full_steps_per_rotation: 400
endstop_pin: !PA13
position_endstop: 0
position_min: 0
position_max: 235
homing_speed: 40


###################################

[stepper_y]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 32
rotation_distance: 80
full_steps_per_rotation: 400
endstop_pin: !PB9
position_endstop: 0
position_max: 235
homing_speed: 40

###################################

[stepper_z]
step_pin: PA1
dir_pin: !PA0
enable_pin: !PC4
microsteps: 32
rotation_distance: 16
full_steps_per_rotation: 400
endstop_pin: !PC13
position_max: 250
position_endstop: 0
position_min: -2
homing_speed: 5

###################################

[extruder]
step_pin: !PC3
dir_pin: !PC2
enable_pin: !PB1
microsteps: 32
rotation_distance: 32
full_steps_per_rotation: 400
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
control: pid
pid_Kp: 18.214030
pid_Ki: 0.616380
pid_Kd: 134.556146
min_temp: 0
max_temp: 250
pressure_advance: 0
max_extrude_only_velocity: 60
max_extrude_only_distance: 500
max_extrude_cross_section: 100

###################################

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
pid_Kp: 20.7074
pid_Ki: 3.5872
pid_Kd: 79.6889
min_temp: 5
max_temp: 100

###################################

[fan]
pin: PC6

###################################
[heater_fan hotend_fan]
pin: PC7
max_power: 1.0
fan_speed: 1
shutdown_speed: 0.0
kick_start_time: 0
heater: extruder
heater_temp: 50.0

[printer]
kinematics: cartesian
max_velocity: 180
max_accel: 2500
#max_accel_to_decel: 1250
max_z_velocity: 12
max_z_accel: 50
square_corner_velocity: 2


[bed_screws]
screw1: 17, 20
screw1_name: front left screw
screw2: 217, 20
screw2_name: front right screw
screw3: 17, 220
screw3_name: rear right screw
screw4: 217, 220
screw4_name: rear left screw
horizontal_move_z: 10
speed: 80

[safe_z_home]
home_xy_position: 115,115
speed: 80.0
z_hop: 10.0
z_hop_speed: 10.0

[filament_switch_sensor my_sensor]
switch_pin: PC14
pause_on_runout: True
runout_gcode: 
    M117 Filament Runout
    M600
insert_gcode: 
    M117 Filament inserted



[firmware_retraction]
retract_length: 2.2
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 60
#   The speed of retraction, in mm/s. The default is 20 mm/s.


[idle_timeout]
gcode:
 TURN_OFF_HEATERS
 M84
timeout: 28800

######################################################################
#MACRO
#####################################################################


[gcode_macro PRINT_START]  
gcode:
    RESPOND MSG="STARTING TO PRINT"
    save_last_file
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
    G92 E0                                         
	  G90             
    CLEAR_PAUSE
    G28               

[gcode_macro PRINT_END]
gcode:    
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  clear_last_file
  RUN_SHELL_COMMAND CMD=clear_plr
  G1 X0 Y0
  M104 S0 ; Turn off extruder
  M140 S0 ; Turn off heated bed
  M106 S0 ; Turn off extruder fan
  M107 ; Turn off chamber fan
  M84 ; Disable motors



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  RUN_SHELL_COMMAND CMD=clear_plr
  clear_last_file
  PRINT_END
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} 
  #SDCARD_RESET_FILE
  M400              ; wait for buffer to clear
  G92 E0            ; zero the extruder
  G1 E-10.0 F1200 	; retract filament
  M106 S0
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G91 
  M107 	            ; turn off fan
  G1 Z2 F3000 
  G90
  G0 X0 Y230 F6000
  M84

[gcode_macro PID_EXTRUDER]
gcode:
  G28
  M106 S255
  PID_CALIBRATE HEATER=extruder TARGET=190
  SAVE_CONFIG

[gcode_macro PID_BED]
gcode:
  G28
  M106 S255
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  SAVE_CONFIG

[gcode_macro M84]
rename_existing:M84.1
gcode:
      SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
      SET_STEPPER_ENABLE STEPPER=extruder  enable=0
      SET_KINEMATIC_POSITION

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   
    {% endif %}

[gcode_macro M191]
gcode:
      {% set s = params.S|float %}
      {% if params.S is defined %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.S|int}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-4} MAXIMUM={s+10} 
      {% endif %}

[gcode_macro M201]
description: Sets maximum accelleration.
  Usage: M201 [X<accel>] [Y<accel>]
gcode:
  {% if 'X' in params or 'Y' in params %}
  {% set accel = (params.X|default(params.Y)|float, params.Y|default(params.X)|float)|min %}
  SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel * 0.5}
  {% else %}
  SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M203]
description: Sets maximum velocity.
  Usage: M203 [X<velocity>] [Y<velocity>]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set velocity = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT VELOCITY="{velocity}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M204]
description: Sets maximum accelleration.
  Usage: M204 [S<accel>] [P<accel> T<accel>]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}
  {% if 'S' in params %}
  {% set s = params.S|float %}
  SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
  {% if 'P' in params %}
  {% set p = params.P|float %}
  {% if 'T' in params %}
  {% set t = params.T|float %}
  {% if p < t %}
  SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
  {% else %}
  SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
  {% endif %}
  {% else %}
  SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
  {% endif %}
  {% elif 'T' in params %}
  {% set t = params.T|float %}
  SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
  {% endif %}
  {% endif %}

[gcode_macro M205]
description: Sets square corner velocity.
  Usage: M205 [X<velocity>] [Y<velocity>]
gcode:
  {% if 'X' in params or 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY="{
      (params.X|default(0)|float, params.Y|default(0)|float)|min}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M600]
gcode:
  PAUSE

[gcode_macro M601]
gcode:
    PAUSE

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Unloading filament...
  G92 E0.0
  G91
  G1 E-45 F5000
  G1 E-15 F1000
  G1 E-20 F1000
  G90
  G92 E0.0
  M400
  M117 Remove Filament Now!
  M117 Filament unloaded!
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
  M117 Heating...
  M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Loading filament...
  # Load the filament into the hotend area.
  G92 E0.0
  G91
  G1 E70 F400
  G1 E40 F100
  G90
  G92 E0.0
  M400
  M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro T0]
gcode:
    # Deactivate second extruder stepper
    SYNC_EXTRUDER_MOTION EXTRUDER=belted_extruder MOTION_QUEUE=
    # Activate first extruder stepper
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
    SET_PRESSURE_ADVANCE ADVANCE=0 EXTRUDER=extruder

[gcode_macro T1]
gcode:
    # Deactivate first extruder stepper
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=
    # Activate second extruder stepper
    SYNC_EXTRUDER_MOTION EXTRUDER=belted_extruder MOTION_QUEUE=extruder
    SET_PRESSURE_ADVANCE ADVANCE=0 EXTRUDER=belted_extruder
    
##################################################
# Verifications and Measurements with ADXL
##################################################

[gcode_macro ADXL_TEST]
description: ADXL Test
gcode:
  ACCELEROMETER_QUERY


[gcode_macro ADXL_NOISE]
description: Measure Accelerometer Noise
gcode:
  MEASURE_AXES_NOISE


[gcode_macro ADXL_AXE_X]
description: Measure X axis resonances
gcode:
  G28
  M400
  SHAPER_CALIBRATE AXIS=X


[gcode_macro ADXL_AXE_Y]
description: Measure Y axis resonances
gcode:
  G28
  M400
  SHAPER_CALIBRATE AXIS=Y

[gcode_macro SECURITY_OFFSET]
description: Apply a 2mm Safety Offset
gcode:
  SET_GCODE_OFFSET Z=+2
  RESPOND MSG="Safety Offset applied!"