######### NOT REMOVE START ##################################
[include plr.cfg]
[include mainsail.cfg]
[include timelapse.cfg]
[include smartpad-adxl345.cfg]
[include smartpad-cpu-temp.cfg]
[include moonraker_obico_macros.cfg]
[exclude_object]
[save_variables]
filename: ~/printer_data/config/variables.cfg


[respond]
default_type: echo
default_prefix: echo:

[display_status]

[pause_resume]

[idle_timeout]
timeout: 36000

#credit:
#Merci à 3dPrinBeginner d'avoir mis a disposition n ligne une base
#Merci à Maxime3d77 d'avoir retravaillé le profils et l'intégré sur le pad WanhaoFrance
#Merci à Dark3dprint (Tiktok) pour les tests et les petits réglages.

# Ce fichier contient des mappages de broches communs pour MKS GEN L
# Lors de l'exécution de "make menuconfig", vous devez :
# - activer "extra low-level configuration setup",
# - sélectionnez Atmega AVR,
# - Processor model atmega2560
# - Processor speed 16Mhz
# - Serial Port UART0
# - Baud à 250000


######################################################
###############   Sidewinder X1 - USB   ##############
######################################################

[mcu]
serial: /dev/ttyUSB0
restart_method: command

######################################################
###############       Stockage PI       ##############
######################################################

[virtual_sdcard]
path: ~/printer_data/gcodes/


######################################################
###############       Retractation      ##############
######################################################
#[firmware_retraction]
#retract_length: 1.2 #Pour direct Drive
#retract_speed: 25
#unretract_extra_length: 0
#unretract_speed: 25

######################################################
#####################   Moteurs   ####################
######################################################


[stepper_x]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
microsteps: 16
rotation_distance: 40
endstop_pin: ^!ar3
position_endstop: 0
position_max: 310
homing_speed: 40.0

###################################

[stepper_y]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar56
microsteps: 16
rotation_distance: 40
endstop_pin: ^!ar14
position_endstop: 0
position_max: 310
homing_speed: 40
homing_positive_dir: false

###################################

[stepper_z]
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
microsteps: 16
rotation_distance: 8
endstop_pin: ^!ar18
position_endstop: 0
position_min: -3
position_max: 400
homing_speed: 30
second_homing_speed: 1

[stepper_z1]
step_pin: ar36
dir_pin: !ar34
enable_pin: !ar30
microsteps: 16
rotation_distance: 8

######################################################
###################   Extrudeur   ####################
######################################################

[extruder]
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
microsteps: 16
rotation_distance: 6.30
# Formula : rotation_distance : <previous_rotation_distance> * <actual_extrude_distance> / <Requested_extrude_distance>
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
min_extrude_temp: 190
min_temp: 5
max_temp: 300
max_extrude_only_distance: 900
max_extrude_cross_section: 2.0
control = pid
pid_kp = 32.299
pid_ki = 2.031
pid_kd = 128.390

######################################################
###################      Bed      ####################
######################################################

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
min_temp: 5
max_temp: 150
control = pid
pid_kp = 48.421
pid_ki = 1.690
pid_kd = 346.818

######################################################
###################     Fan       ####################
######################################################

[fan]
pin: ar9
kick_start_time: 0.500

[heater_fan my_nozzle_fan]
pin:ar7
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

######################################################
###################    Printer    ####################
######################################################

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1800
max_z_velocity: 50
max_z_accel: 100
square_corner_velocity: 5 

[force_move]
enable_force_move: True

######################################################
###################      Screws     ##################
######################################################

[bed_screws]
screw1: 55,55
screw1_name: front left
screw2: 255,55
screw2_name: front right
screw3: 255,255
screw3_name: back right
screw4: 55,255
screw4_name: back left
speed: 100.0


[screws_tilt_adjust]
screw1: 22,83
screw1_name: front left
screw2: 222,83
screw2_name: front right
screw3: 22,283
screw3_name: back left
screw4: 222,283
screw4_name: back right
speed: 100.0
screw_thread: CW-M5

[pause_resume]
recover_velocity: 50.

[display_status]

######################################################
###################       LEDs      ##################
######################################################

[output_pin LED_Green]
pin: ar4
pwm: false
value: 0
shutdown_value: 0

[output_pin LED_Red]
pin: ar5
pwm: false
value: 0
shutdown_value: 0

[output_pin LED_Blue]
pin: ar6
pwm: false
value: 0
shutdown_value: 0



# Arduino aliases for atmega2560/1280 (Arduino mega) boards
[board_pins arduino-mega]
aliases:
    ar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,
    ar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,
    ar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,
    ar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,
    ar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,
    ar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,
    ar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,
    ar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,
    ar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,
    ar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,
    ar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,
    ar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,
    ar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,
    ar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,
    analog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,
    analog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,
    analog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,
    analog15=PK7,
    # Marlin adds these additional aliases
    ml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,
    ml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,
    ml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,
    ml85=PH7



[exclude_object]

#####################################################################
#MACRO
#####################################################################


[gcode_macro PRINT_START]  
gcode:
    RESPOND MSG="STARTING TO PRINT"
    save_last_file
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
    G92 E0                                        
	  G90              
    CLEAR_PAUSE
    G28    
        # LEDS ON
    LIGHT_ON

[gcode_macro PRINT_END]
gcode:    
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  clear_last_file
  RUN_SHELL_COMMAND CMD=clear_plr
  G1 X0 Y300
  M104 S0 ; Turn off extruder
  M140 S0 ; Turn off heated bed
  M106 S0 ; Turn off extruder fan
  M107 ; Turn off chamber fan
  M84 ; Disable motors
  LIGHT_OFF ; LEDS OFF



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  RUN_SHELL_COMMAND CMD=clear_plr
  clear_last_file
  PRINT_END
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} 
  #SDCARD_RESET_FILE
  M400              ; wait for buffer to clear
  G92 E0            ; zero the extruder
  G1 E-10.0 F1200 	; retract filament
  M106 S0
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G91 
  M107 	            ; turn off fan
  G1 Z2 F3000 
  G90
  G0 X0 Y230 F6000
  M84


[gcode_macro PID_EXTRUDER]
gcode:
  G28
  M106 S255
  PID_CALIBRATE HEATER=extruder TARGET=190
  SAVE_CONFIG

[gcode_macro PID_BED]
gcode:
  G28
  M106 S255
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  SAVE_CONFIG

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   
    {% endif %}

[gcode_macro M84]
rename_existing:M84.1
gcode:
      SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
      SET_STEPPER_ENABLE STEPPER=extruder  enable=0
      SET_KINEMATIC_POSITION

[gcode_macro M205]
description: Sets square corner velocity.
  Usage: M205 [X<velocity>] [Y<velocity>]
gcode:
  {% if 'X' in params or 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY="{
      (params.X|default(0)|float, params.Y|default(0)|float)|min}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M204]
description: Sets maximum accelleration.
  Usage: M204 [S<accel>] [P<accel> T<accel>]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}
  {% if 'S' in params %}
  {% set s = params.S|float %}
  SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
  {% if 'P' in params %}
  {% set p = params.P|float %}
  {% if 'T' in params %}
  {% set t = params.T|float %}
  {% if p < t %}
  SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
  {% else %}
  SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
  {% endif %}
  {% else %}
  SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
  {% endif %}
  {% elif 'T' in params %}
  {% set t = params.T|float %}
  SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
  {% endif %}
  {% endif %}
  
[gcode_macro M203]
description: Sets maximum velocity.
  Usage: M203 [X<velocity>] [Y<velocity>]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set velocity = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT VELOCITY="{velocity}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M201]
description: Sets maximum accelleration.
  Usage: M201 [X<accel>] [Y<accel>]
gcode:
  {% if 'X' in params or 'Y' in params %}
  {% set accel = (params.X|default(params.Y)|float, params.Y|default(params.X)|float)|min %}
  SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel * 0.5}
  {% else %}
  SET_VELOCITY_LIMIT
  {% endif %}
  
[gcode_macro M191]
gcode:
      {% set s = params.S|float %}
      {% if params.S is defined %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.S|int}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-4} MAXIMUM={s+10} 
      {% endif %}

[gcode_macro M600]
gcode:
  PAUSE 

[gcode_macro M601]
gcode:
    CHANGE_FILAMENT

[gcode_macro SAUVEGARDER]
description: Sauvegarder la configuration
gcode:
  SAVE_CONFIG

[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Unloading filament...
  G92 E0.0
  G91
  G1 E-45 F5000
  G1 E-15 F1000
  G1 E-20 F1000
  G90
  G92 E0.0
  M400
  M117 Remove Filament Now!
  M300 S300 P1000
  M117 Filament unloaded!
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
  M117 Heating...
  M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Loading filament...
  # Load the filament into the hotend area.
  G92 E0.0
  G91
  G1 E70 F400
  G1 E40 F100
  G90
  G92 E0.0
  M400
  M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro LIGHT_ON]
gcode:
    SET_PIN PIN=LED_Green VALUE=1.0
    SET_PIN PIN=LED_Blue VALUE=1.0
    SET_PIN PIN=LED_Red VALUE=1.0
[gcode_macro LIGHT_OFF]
gcode:
    SET_PIN PIN=LED_Green VALUE=0.0
    SET_PIN PIN=LED_Blue VALUE=0.0
    SET_PIN PIN=LED_Red VALUE=0.0


    
##################################################
# Verifications and Measurements with ADXL
##################################################

[gcode_macro ADXL_TEST]
description: ADXL Test
gcode:
  ACCELEROMETER_QUERY


[gcode_macro ADXL_NOISE]
description: Measure Accelerometer Noise
gcode:
  MEASURE_AXES_NOISE


[gcode_macro ADXL_AXE_X]
description: Measure X axis resonances
gcode:
  G28
  M400
  SHAPER_CALIBRATE AXIS=X


[gcode_macro ADXL_AXE_Y]
description: Measure Y axis resonances
gcode:
  G28
  M400
  SHAPER_CALIBRATE AXIS=Y

[gcode_macro SECURITY_OFFSET]
description: Apply a 2mm Safety Offset
gcode:
  SET_GCODE_OFFSET Z=+2
  RESPOND MSG="Safety Offset applied!"


